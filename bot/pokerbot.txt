Схема покербота:
  Блок 1 — интерфейс пользователя
  Блок 2 — блок принятия решения.
  Блок 3 — блок сбора статистики,


=============================================================

должно быть десять функций по определению комбинации:

isHighCard, isOnePair, isTwoPair, isSet, isStraight, isFlush, isFullHouse, isQuads, isStraightFlush, isRoyalFlush.



=============================================================

K = (suit , rank)

Проверку на флеш делаем очень быструю
Флеш - это когда K1(0) == K2(0) == K3(0) == K4(0) == K5(0)

Поверки по рангам
1. Делаем пустой масив номиналов S размером в 13 элементов: от 0(двойка) до 12 (туз)
2. Инициализируем его нулями - это счётчики 
3. Для каждой карты K увеличиваем счётчик соответствующего номинала
4. Далее сортируем массив S (счётчиков номинала по возрастанию) и проверяем результат:
      1. если первый равен 4 - "каре".
      2. если первый элемент равен 3:
         2а. если второй элемент равен 2 - "фул".
         2б. если второй элемент равен 0 или 1 - "тройка"
     3. если первый элемент равен 2:
         3а. если второй элемент равен 2 - "две пары".
         3б. если второй элемент равен 0 или 1 - "пара"

как подсчитывать страйт?

проверку на стрит можно делать уже после определения всех остальных комбинаций. Стрит получится, только если нет даже пары. Ведь все карты должны быть _разные по номиналу.

Пусть будет массив S. Не сортируя его я могу задать поиск первого элемента, содержащего единицу
i=Array.IndexOf(S,1)
a затем рассматривать следующие варианты
i<0
элементов содержащих единицу нет, значит неповторяющихся номиналов нет. Это возможно только в случае 3+2 - значит Full House
i=0
Самый первый элемент массива имеет значение 1. Значит у нас в руке один Ace. Проверяем на наличие straight
Если А2345, что выражается как S(0)=S(1)=S(2)=S(3)=S(4) или 10JQKA, что выражается как S(0)=S(9)=S(10)=S(11)=S(12), то у нас straght, в противном случае сортируем массив и проверяем совпадение номиналов (на full house уже проверять не надо).
i<=8
Проверяем на наличие straight снова таким образом. Если S(i)=S(i+1)=S(i+2)=S(i+3)=S(i+4), то у нас straight. В противном случае сортируем массив и проверяем совпадение номиналов.
i>8
В этом случае straight уже быть не может, т.к. 9й элемент массива - десятка. Просто сортируем массив и проверяем совпадение номиналов.          


проблему подсчета совпадений номиналов он решил так:

For i = 0 to 4
 For j = 0 to 4
   If hand(i).face = hand(j).face AndAlso i <> j
     matches += 1
   End If
 Next j
Next i

hand(i).face - берется из структуры данных (колоды)

этот кусок кода определит только то, что на руке есть что-то "не меньше пары", а вот что именно?

счетчиков д.б. не два, а массив счетчиков (по кол-ву номиналов)
тогда достигаем нужной гибкости:

For i = 0 to 4
  For j = 0 to 4
    If hand(i).face = hand(j).face And i <> j then
      matches(face) += 1
    End If
  Next j
Next i

соответственно затем:

For i = 0 to maxfaces
  if matches(i) = 2
    pairs += 1
  elseif matches(i) = 3
    threes += 1
  elseif matches(i) = 4
    kare += 1
  endif
Next i

это будет работать при любом кол-ве карт в руке, т.е. покажет все пары, тройки и каре.

>>> слишком много переменных вводится, тогда уж лучше массив...

=============================================================

Как по вашему лучше устроить перебор всех пятикарточных комбинаций?
У меня была мысль завернуть это дело в 5 циклов, но тогда встает проблема дубликатов, т.е. получается, что учитывается порядок карт. Как от этого можно избавиться?

Можно не избавляться, а рассмотреть 52!/47! вариантов, что будет дольше в 5! = 120 раз.

Я решил, что делать в 120 раз больше рассчетов - неэфективно, поэтому пошел вторым путем. В итоге получился пятиэтажный цыкл. Но отрабатывает за доли секунды.

Теперь буду искать и придумывать алгоритмы для оценки силы комбинации. Для начала - не буду учитывать кикеры, ограничиваясь просто типом комбинации (топ-карта, пара, две пары, сет, стрит, флеш, фул хаус, карэ, стрит-флеш. Всего 9 вариантов результата).

Сразу приходит на ум посчитать промежуточные значения - количества карт одной масти, одного достоинства. Дальше - делать выводы на основании этих значений.

=============================================================

Если взять ривер, то есть на столе лежат все пять карт, возможных комбинаций: 1 (без карманных карт) + 5*2 (с одной карманной картой) + 10 (с двумя карманными картами) = 21

если взять ситуацию, когда на столе лежат 4 карты из 5ти и нам известны 2 наших карманных карты, чтобы определить наши шансы на победу, нам перебором нужно будет проверить много комбинаций. В такой ситуации оптимальнее определить старшую комбинацию и соответственно карты, которые помогут младшей руке и не усилят старшую руку до натса.  уже становится сложнее, не говоря уже про подсчеты шансов одной руки против другой, когда на столе нет ни одной карты, то есть префлоп

у тебя есть 7 карт, опиши алгоритм, как ты определишь, что у тебя стрит?

1. Сортировка по возрастанию номинала.
2. перебор с сравнением с предыдущей картой.
3.Если разница с предыдущей больше 1 номинала - значит не стрит. Если дошли до конца без прерывания - значит стрит

пример руки где твой алгоритм не работает 245678A

Это частный случай. Можно исключить его предварительным поиском туза и двойки. Если есть - то тузу присваивается низший приоритет

A2TJKQ

Ставишь счетчик сколько карт прошло подряд, если следующая не попорядку скидываешь в 0. Если после пребеора счетик = 5 или выше- значит стрит. +  если с низким тузом не достигая 5 вышел сброс счетчика, то тузу возвращается высший приоритет

туза "делим" на две карты с номиналом 1 и 14 соответственно (для стрита). тока непонятно зачем тебе это? без размеров стэков, банка, нет смысла считать шансы

делаем два словаря: в одном ключами являются ранги карт, в другом - их масти, а в качестве значений - количество вхождений. по размерам словарей уже можно будет сделать определенные выводы, анализировать их или отбрасывать

===================================

делал код расчёта вероятностей в холдеме. делал просто - проверял пару тысяч случайных партий и смотрел результаты. результат довольно-таки правильный получается, а время расчёта мало. Самые первые покерные боты так и делали. В принципе, для префлопа наверняка будет достаточно.

по идее достаточно найти самую сильную руку, а для этого не обязательно сравнивать все-со-всеми. если это игрок то он победил, иначе - проиграл

В холдеме семикарточные руки. Т.е. из 7 карт выбираются 5 карт так, чтобы комбинация была максимальной. 

да, именно это и делал. 2 карты на столе, в руку по одной добавляют до 5, перемежая ставками


-------

Нам необходимо узнать вероятность того что после вскрытия противник окажется сильнее...

Итак есть набор комбинаций разной силы... (разные стриты суть разные комбинации)

Нам известно от 5 до 7 наших карт и от 3 до 5 карт соперника и надо знать вероятность того, что при вскрытии комбинация соперника окажется сильнее/слабее (я не учитываю вариант равносильных комбинаций когда вступают нетривиальные правила -- такое маловероятно и этим вполне можно пренебречь).

Во первых необходимо изучить полную вероятность того что в 7 картах окажется комбинация и понять как те или иные открытые карты влияют на эту вероятность... (при этом набор открытых карт можно считать упорядочеными == допустим в руке карты 1 и 2, на столе 3,4,5,6,7)

Например рассмотрим тузовую четверку...

Полная вероятность (дай бог не ошибусь-- сколько там карт то? ну пусть будет 50)

Всего есть столько вариантов расклада которые нас устраивают: (4*3*2*1) * (46*45*44) * (5*5*5) = С
(выбираем в какой последовательности идут тузы, потом оставшиеся 3 карты и то между какими тузами будут каждая из них) в итоге получаем вероятность данной комбинации С/n где n=50*49*...*44 - всего комбинаций (упорядоченых).

Теперь по-очереди рассматриваем известные карты...

Допустим первая карта у нас не туз... Тогда C становится = (4*3*2*1) * (45*44) * (5*5)    (то есть теперь точно знаем какой у нас не туз и где он лежит)
Соответственно если туз, то С= (3*2*1) * (46*45*44) * (4*4*4) и вероятность четверки -- С/n причем n теперь 49*48*..*44 (одну карту уже знаем)....

....Итак, проанализировав вероятность каждой комбинации для себя и для соперника (думаю вполне понятно как) предстоит последний шаг: Оценить вероятность победы...

Тут все просто.

Итак допустим мы знаем что с вероятностью x0 мы получим кукиш с маслом - в таком случае противнику достаточно выкинуть хоть что-то содержательное - это равно сумме вероятностей для каждой комбинации (не тупая сумма, а надо учеть что вероятность выпадения четверки уже включает в себя уже посчитаную вероятность выпадения тройки... считаю что это надо вкладывать в рассчет С для таких комбинаций и считать что появление, например, четвертого туза убивает комбинацию "тузовая тройка", которая просто неприемле наличия четырех тузов). Так вот -- допустим что при кукише в x0 случаев противник с вероятностью X0 выигрывает.... Тогда вероятнность события "противник выиграл при том что у нас кукиш" равна x0*X0... Аналогично оценивается вероятность выигрыша противника для каждой нашей возможной комбинации (вполне понятным образом)... Сумма таких вероятностей и есть полная вероятность выиграша....

А еще можно попробовать тоже самое но для неупорядоченых наборов карт... Быть может первая часть получится проще...

----------------

Можем сравнивать свою руку со всеми наиболее вероятными руками противника.

Всех возможных комбинаций рук (по силе) чуть меньше 8-ми тысяч. Нужно подумать насколько будет просто расчитать вероятность каждой

достаточно много игроков в покер просто оперируют вероятностями ( т.е. , например - вероятность того , что у соперника при известных своих 2 картах + 5 картах флопа стрит примерно 20%. у меня пара тузов , а во флопе ничего , кроме недострита . А дальше всё зависит от степени агрессивности нашей игры - увеличить ставку  или , например , вообще уйти из этой раздачи. Опять-же соперник может блефануть , а мы можем испугаться , ну и конечно с точностью до наоборот).

А по поводу психологии - это да , если ты садишься в казино против дилера играть , то тут никакой психологии, т.к. дилеру по барабану - он автоматом работает: раздать всем по 2 карты включая себя -> подождать решения игроков - > вскрыть свои карты -> сравнить свою руку с рукой игрока и либо оплатить в зависимости от комбинации , либо забрать ante и bet. Но если играть с соперником , то это совсем другое дело - как можно оценить математически такую ситуацию - в руке пара дам , во флопе три валета + ну и там ещё 3 и 4, к примеру, и соперник ставит максимальную ставку. И тут уже можно понервничать - вдруг у него каре на валетах ? А может фул-хаус , но младше ? А если каре , то в деньгах теряешь очень много? Вот тут уже включаются психология и опыт анализировать предыдущие действия соперника.

Для таких игр как покер можно теоретически расчитать вероятности действий (fold, call, raise) в любой ситуации. Т.е. в каждой конкретной ситуации нет единствненно правильного решения. Нужно их чередовать с определенной частотой. Но найти теоретическое решение жутко сложно. Нам остается лишь приближаться к нему. Люди это делают с помощбю психологии. У машин может быть другой путь.

---

Для игры в блэк джек существует базовая стратегия, т.е. стратегия, при игре в которую человек минимизирует свой проигрыш в казино. НО - казино не борется с людьми, которые играют по базе. Вот только когда человек начинает считать карты, тогда да - человеку в блэк джек запрещают играть. Это я к тому , что оптимальная стратегия не всегда даёт положительный результат. Иногда уверенность в том , что вот она - система мечты, которая должна грести деньги лопатой, может сыграть очень плохую роль.

В игре 6 колод - они перед игрой тасуются, затем специальной пластиковой картой делят эту большую колоду на 2 . Просто втыкают её где-то в районе 1/3 от конца большой колоды и всю эту конструкцию пихают в башмак. Игра идёт до выхода этой пластиковой карты (красной) . В колоде одинаковое количество считаемых больших и малых карт. Мы считаем дисбалланс больших и малых карт. Т.е. если у нас выходит много мелких , то счёт растёт , если выходит много крупных , то падает. В случае, когда реальный счёт (это текущий делённый на оставшееся кол-во колод в  башмаке) становится равным 3 или больше, то вероятность начала выхода крупных карт достаточно высока (какая - сказать не могу - не знаю ). На это и играют. А после выхода красной карты всё опять перемешивается. Ах , да - отыгранные карты в колоду по ходу текущего шафла не возвращаются, они возвращаются только после выхода красной карты (т.е примерно 4 колоды разыгрываются).

Казино вообще никакой информацией не пользуется
- тупо набираются карты до 17 очков,
- 17-21 - останавливается, сравниваются очки и
     если у игрока больше , то платит 1:1 иначе забирает,
- если нет 17 - берёт карту
22 - перебор - всем оплачивается ставка 1:1 (или 3:2 для BlackJack)

-------


Монте-Карло может помочь посчитать вероятность раскладов. Но как он может помочь делать правильные заявки? Не надо забывать что кроме Выложенных карт - информацию о ситуации в партии дают заявки соперников, а своими заявками мы предоставляем информацию соперникам. Тех, кто приспосабливается к стилю соперника, можно ловить на этом - тотальным и резким переключением на другой стиль. Когда соперник заметит, что мы играем совсем иначе - мы переключимся на еще более другой :)

игра:
два игрока, каждый берет взакрытую по одной карте (из колоды в 52 карты).
В результате открытия выигрывает сильнейшая по номиналу карта (всего 13 номиналов) - выигрывает большую ставку.
Если игрок пасует - то он проигрывает малую ставку.
Первой заявкой SB может либо ставка либо полблайнда (уравнивает с BB).
После этого у игроков возможность только либо спасовать либо сравнять. Сказать "Ставка" за торговлю может только один игрок, и только один раз.
После ответа "чек" на "уравнивание блайнда" первым игроком, либо если номиналы карт после открытия одинаковы - партия переигрывается (право сдачи переходит ко второму игроку)

для техасского холдема никакого толкового AI не написать в принципе. Оперировать ведь приходится только своими картами, плюс "общими" - а их всего 2 вначале и 7 в конце - какие бы предположения мы ни делали, мы ничего не сможем сказать о том, что у противников во взятке. Единственные данные у нас - их поведение, то есть, делает противник check, bet, или повышает ставку, и насколько. Пасующий нас уже не интересует - все что из него можно выжать, так это то, что у него нет "парирующих карт", но это увеличивает вероятность выпадения этих карт следующим пиком на довольно незначительную величину. Разве что игра идет против 20 противников, а пасуют сразу 19 :). Приходится оперировать настолько недостоверной информацией, что гораздо большее значение имеет расклад, чем все твои выкладки :). Я пробовал играть в холдем с компом. Вся стратегия сводится к пасованию, когда противник делает большие ставки, а у тебя нет ничего интересного, игре наудачу, когда у тебя неполный флеш или стрит, и пробиванию большими ставками когда вначале приходит пара. 

Вот что нужно:
1) на префлопе у нас две карты. Надо узнать их "вес", и может быть лучше это все скинуть. 
2) На флопе получается 5-ти карточная комбинация. Надо просчитать что выпало или что может выпасть если придут еще две карты и какой процент вероятности что это выпадет. Надо узнать какие комбинации с этими картами могут выпасть у соперников. Может быть и играть не стоит.


1. у тебя только считаются вероятности, но нет стратегии
2. в твоем подсчете не учитываются действия игроков (заявки)
Например для упрощенного варианта с одним циклом торговли есть сведение к модификации задачи матричных игр, и соответственно методы получения вероятностной оптимальной стратегии (методами линейного программирования) - то есть есть алгоритм четкого и полного решения. Есно алгоритм учитывает всё - и предшедствующие заявки, и информацию о своей карте (картах).

нет проблем с написанием простейших Ботов (определением возможных действий). так как условия на действия элементарны - пока нет ставки возможен чек, если весь круг прочекал, то торговля завершена, повышение/ставка возможны не более четырех раз за круг торговли, посленим делает заявку игрок перед последним поднявшим/поставившим ставку, две первые ставки (в темную) ставкой/повышением не считаются. 

Да, посчитать вероятность это лишь малая часть дела. И поможет только чтоб бот совсем не тупил.

объясни что ты подразумеваешь под "перебором". Перебираем возможные действия игроков (fold, check, call, bet, raise). Что в результате такого перебора мы получим? И каким образом?


псевдокод:

Eval(Var OF[КоличествоСоперников])
//
Searсh(Соперник;Depth;Var OF[КоличествоСоперников])
Var OF1[КоличествоСоперников];
if Depth=0 then Eval(OF)
Else
OC:=-inf;
ЛучшееДействие:=0;
Для Каждого действия (Заявки)
  ВыполнитьДействие;
  Search(?(Соперник=КоличествоСоперников,1,Соперник+1),Depth-1,OF1);
  if OF1[Соперник]>OC Then
      ЛучшееДействие:=ТекущееДействие;
      OC:=OF1[Соперник];
      OF:=OF1; // передача на уровень вниз
  Endif;
КонецЦикла;
Endif;

Вот перебор на торговлю... (Это если у нас есть решение в чистых стратегиях) То есть для игр на несколько соперников с полной информацией, где каждый пытается максимизировать свою оценку. Не рассмотрен случай когда два (и более) хода дают одинаковую оценку. Есть другой вариант перебора - пессимистичный, это когда каждый соперник не максимизирует свой выигрыш, а минимизирует наш...

В твоем переборе упущен самый ключевой момент. Когда игра заканчивается еще при depth > 0. Как посчитать оценку не зная карт соперника?

Оценка считается методом монте-карло, причем неважно завершен перебор или нет.
(то есть кидаем случайным образом карты, и оцениваем ожидаемый выигрыш)
Осталось увязать монте-карло с заявками (и открытыми картами) в переборе и вероятностными стратегиями.
Четкой мат. модели на более чем 2 соперников в любом случае не существует, и программа выигрывающая слабому сопренику будет проигрывать сильному, и наоборот. То есть всё-таки нужны адаптивная модель!
Но в любом случае получается что лучше делать пессимистичекий вариант - в переборе все пытаются минимизировать оценку одной стороны, а эта сторона (за кого обдумываем) Пытается максимизировать свою оценку.


